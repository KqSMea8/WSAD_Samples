// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.wsbook.casestudy.ejb;

import com.wsbook.casestudy.command.UpdateTimesheetFormCommand;
import com.wsbook.casestudy.domain.Employee;
import com.wsbook.casestudy.domain.Project;
import com.wsbook.casestudy.domain.TimeSheet;
import com.wsbook.casestudy.exception.MappingException;
import com.wsbook.casestudy.exception.ModelException;
import com.wsbook.casestudy.exception.NoSuchEmployeeException;
import com.wsbook.casestudy.exception.NoSuchProjectException;
import com.wsbook.casestudy.exception.NoSuchTimeSheetException;
import com.wsbook.casestudy.value.TimeSheets;
import com.wsbook.casestudy.value.WeekEndings;
import java.io.Serializable;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.UnexpectedException;
import java.util.ArrayList;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Stub;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.RemarshalException;
import org.omg.CORBA.portable.ServantObject;

public class _TimeSheetActionProcessorFacade_Stub extends Stub implements TimeSheetActionProcessorFacade {
    
    private static final String[] _type_ids = {
        "RMI:com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000"
    };
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public EJBHome getEJBHome() throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("_get_EJBHome", true);
                    in = _invoke(out);
                    return (EJBHome) in.read_Object(EJBHome.class);
                } catch (ApplicationException ex) {
                    in = ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getEJBHome();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("_get_EJBHome",javax.ejb.EJBObject.class);
            if (so == null) {
                return getEJBHome();
            }
            try {
                EJBHome result = ((javax.ejb.EJBObject)so.servant).getEJBHome();
                return (EJBHome)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Object getPrimaryKey() throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("_get_primaryKey", true);
                    in = _invoke(out);
                    return Util.readAny(in);
                } catch (ApplicationException ex) {
                    in = ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getPrimaryKey();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("_get_primaryKey",javax.ejb.EJBObject.class);
            if (so == null) {
                return getPrimaryKey();
            }
            try {
                Object result = ((javax.ejb.EJBObject)so.servant).getPrimaryKey();
                return (Object)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void remove() throws RemoteException, RemoveException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("remove", true);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                        throw (RemoveException) in.read_value(RemoveException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    remove();
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("remove",javax.ejb.EJBObject.class);
            if (so == null) {
                remove();
                return;
            }
            try {
                ((javax.ejb.EJBObject)so.servant).remove();
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof RemoveException) {
                    throw (RemoveException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Handle getHandle() throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("_get_handle", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Handle) in.read_abstract_interface(Handle.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getHandle();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("_get_handle",javax.ejb.EJBObject.class);
            if (so == null) {
                return getHandle();
            }
            try {
                Handle result = ((javax.ejb.EJBObject)so.servant).getHandle();
                return (Handle)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public boolean isIdentical(EJBObject arg0) throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("isIdentical", true);
                    Util.writeRemoteObject(out,arg0);
                    in = _invoke(out);
                    return in.read_boolean();
                } catch (ApplicationException ex) {
                    in = ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return isIdentical(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("isIdentical",javax.ejb.EJBObject.class);
            if (so == null) {
                return isIdentical(arg0);
            }
            try {
                EJBObject arg0Copy = (EJBObject) Util.copyObject(arg0,_orb());
                return ((javax.ejb.EJBObject)so.servant).isIdentical(arg0Copy);
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void addProject(Project arg0) throws MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("addProject", true);
                    out.write_value(arg0,Project.class);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    addProject(arg0);
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("addProject",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                addProject(arg0);
                return;
            }
            try {
                Project arg0Copy = (Project) Util.copyObject(arg0,_orb());
                ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).addProject(arg0Copy);
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Project findProjectByName(String arg0) throws NoSuchProjectException, MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findProjectByName", true);
                    out.write_value(arg0,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Project) in.read_value(Project.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchProjectEx:1.0")) {
                        throw (NoSuchProjectException) in.read_value(NoSuchProjectException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findProjectByName(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findProjectByName",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findProjectByName(arg0);
            }
            try {
                Project result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findProjectByName(arg0);
                return (Project)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchProjectException) {
                    throw (NoSuchProjectException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Project findProjectByKey(String arg0) throws NoSuchProjectException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findProjectByKey", true);
                    out.write_value(arg0,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Project) in.read_value(Project.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchProjectEx:1.0")) {
                        throw (NoSuchProjectException) in.read_value(NoSuchProjectException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findProjectByKey(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findProjectByKey",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findProjectByKey(arg0);
            }
            try {
                Project result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findProjectByKey(arg0);
                return (Project)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchProjectException) {
                    throw (NoSuchProjectException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public ArrayList findAllProjects() throws ModelException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("findAllProjects", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (ArrayList) in.read_value(ArrayList.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/ModelEx:1.0")) {
                        throw (ModelException) in.read_value(ModelException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findAllProjects();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findAllProjects",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findAllProjects();
            }
            try {
                ArrayList result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findAllProjects();
                return (ArrayList)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof ModelException) {
                    throw (ModelException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void removeProject(String arg0) throws NoSuchProjectException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("removeProject", true);
                    out.write_value(arg0,String.class);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchProjectEx:1.0")) {
                        throw (NoSuchProjectException) in.read_value(NoSuchProjectException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    removeProject(arg0);
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("removeProject",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                removeProject(arg0);
                return;
            }
            try {
                ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).removeProject(arg0);
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchProjectException) {
                    throw (NoSuchProjectException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheet findOrCreateTimeSheetByKey(String arg0, String arg1) throws NoSuchEmployeeException, MappingException, ModelException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findOrCreateTimeSheetByKey", true);
                    out.write_value(arg0,String.class);
                    out.write_value(arg1,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheet) in.read_value(TimeSheet.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/ModelEx:1.0")) {
                        throw (ModelException) in.read_value(ModelException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findOrCreateTimeSheetByKey(arg0,arg1);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findOrCreateTimeSheetByKey",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findOrCreateTimeSheetByKey(arg0, arg1);
            }
            try {
                TimeSheet result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findOrCreateTimeSheetByKey(arg0, arg1);
                return (TimeSheet)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                if (exCopy instanceof ModelException) {
                    throw (ModelException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheet createTimeSheet(String arg0, String arg1) throws NoSuchEmployeeException, MappingException, ModelException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("createTimeSheet", true);
                    out.write_value(arg0,String.class);
                    out.write_value(arg1,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheet) in.read_value(TimeSheet.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/ModelEx:1.0")) {
                        throw (ModelException) in.read_value(ModelException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return createTimeSheet(arg0,arg1);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("createTimeSheet",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return createTimeSheet(arg0, arg1);
            }
            try {
                TimeSheet result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).createTimeSheet(arg0, arg1);
                return (TimeSheet)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                if (exCopy instanceof ModelException) {
                    throw (ModelException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public ArrayList findPendingForEmployee(String arg0) throws NoSuchEmployeeException, MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findPendingForEmployee", true);
                    out.write_value(arg0,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (ArrayList) in.read_value(ArrayList.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findPendingForEmployee(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findPendingForEmployee",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findPendingForEmployee(arg0);
            }
            try {
                ArrayList result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findPendingForEmployee(arg0);
                return (ArrayList)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public ArrayList findApprovedForEmployee(String arg0) throws NoSuchEmployeeException, MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findApprovedForEmployee", true);
                    out.write_value(arg0,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (ArrayList) in.read_value(ArrayList.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findApprovedForEmployee(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findApprovedForEmployee",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findApprovedForEmployee(arg0);
            }
            try {
                ArrayList result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findApprovedForEmployee(arg0);
                return (ArrayList)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheets getPendingTimeSheets() throws MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("getPendingTimeSheets", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheets) in.read_value(TimeSheets.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getPendingTimeSheets();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("getPendingTimeSheets",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return getPendingTimeSheets();
            }
            try {
                TimeSheets result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).getPendingTimeSheets();
                return (TimeSheets)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheets getApprovedTimeSheets() throws MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("getApprovedTimeSheets", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheets) in.read_value(TimeSheets.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getApprovedTimeSheets();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("getApprovedTimeSheets",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return getApprovedTimeSheets();
            }
            try {
                TimeSheets result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).getApprovedTimeSheets();
                return (TimeSheets)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public WeekEndings getWeekEndings(String arg0) throws NoSuchEmployeeException, MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("getWeekEndings", true);
                    out.write_value(arg0,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (WeekEndings) in.read_value(WeekEndings.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getWeekEndings(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("getWeekEndings",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return getWeekEndings(arg0);
            }
            try {
                WeekEndings result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).getWeekEndings(arg0);
                return (WeekEndings)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheet approveTimeSheetByKey(String arg0, String arg1, String arg2) throws MappingException, ModelException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("approveTimeSheetByKey", true);
                    out.write_value(arg0,String.class);
                    out.write_value(arg1,String.class);
                    out.write_value(arg2,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheet) in.read_value(TimeSheet.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/ModelEx:1.0")) {
                        throw (ModelException) in.read_value(ModelException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return approveTimeSheetByKey(arg0,arg1,arg2);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("approveTimeSheetByKey",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return approveTimeSheetByKey(arg0, arg1, arg2);
            }
            try {
                TimeSheet result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).approveTimeSheetByKey(arg0, arg1, arg2);
                return (TimeSheet)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                if (exCopy instanceof ModelException) {
                    throw (ModelException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheet updateTimesheet(UpdateTimesheetFormCommand arg0) throws ModelException, NoSuchTimeSheetException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("updateTimesheet", true);
                    out.write_value(arg0,UpdateTimesheetFormCommand.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheet) in.read_value(TimeSheet.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/ModelEx:1.0")) {
                        throw (ModelException) in.read_value(ModelException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchTimeSheetEx:1.0")) {
                        throw (NoSuchTimeSheetException) in.read_value(NoSuchTimeSheetException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return updateTimesheet(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("updateTimesheet",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return updateTimesheet(arg0);
            }
            try {
                UpdateTimesheetFormCommand arg0Copy = (UpdateTimesheetFormCommand) Util.copyObject(arg0,_orb());
                TimeSheet result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).updateTimesheet(arg0Copy);
                return (TimeSheet)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof ModelException) {
                    throw (ModelException)exCopy;
                }
                if (exCopy instanceof NoSuchTimeSheetException) {
                    throw (NoSuchTimeSheetException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Employee findEmployeeByKey(String arg0) throws NoSuchEmployeeException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findEmployeeByKey", true);
                    out.write_value(arg0,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Employee) in.read_value(Employee.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findEmployeeByKey(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findEmployeeByKey",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findEmployeeByKey(arg0);
            }
            try {
                Employee result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findEmployeeByKey(arg0);
                return (Employee)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public ArrayList findAllEmployees() throws ModelException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("findAllEmployees", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (ArrayList) in.read_value(ArrayList.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/ModelEx:1.0")) {
                        throw (ModelException) in.read_value(ModelException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findAllEmployees();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findAllEmployees",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findAllEmployees();
            }
            try {
                ArrayList result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findAllEmployees();
                return (ArrayList)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof ModelException) {
                    throw (ModelException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void removeEmployee(String arg0) throws NoSuchEmployeeException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("removeEmployee", true);
                    out.write_value(arg0,String.class);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    removeEmployee(arg0);
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("removeEmployee",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                removeEmployee(arg0);
                return;
            }
            try {
                ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).removeEmployee(arg0);
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void addEmployee(Employee arg0) throws MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("addEmployee", true);
                    out.write_value(arg0,Employee.class);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    addEmployee(arg0);
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("addEmployee",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                addEmployee(arg0);
                return;
            }
            try {
                Employee arg0Copy = (Employee) Util.copyObject(arg0,_orb());
                ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).addEmployee(arg0Copy);
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public TimeSheet findTimeSheetByKey(String arg0, String arg1) throws NoSuchEmployeeException, MappingException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findTimeSheetByKey", true);
                    out.write_value(arg0,String.class);
                    out.write_value(arg1,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (TimeSheet) in.read_value(TimeSheet.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/NoSuchEmployeeEx:1.0")) {
                        throw (NoSuchEmployeeException) in.read_value(NoSuchEmployeeException.class);
                    }
                    if (id.equals("IDL:com/wsbook/casestudy/_exception/MappingEx:1.0")) {
                        throw (MappingException) in.read_value(MappingException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findTimeSheetByKey(arg0,arg1);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findTimeSheetByKey",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                return findTimeSheetByKey(arg0, arg1);
            }
            try {
                TimeSheet result = ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).findTimeSheetByKey(arg0, arg1);
                return (TimeSheet)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof NoSuchEmployeeException) {
                    throw (NoSuchEmployeeException)exCopy;
                }
                if (exCopy instanceof MappingException) {
                    throw (MappingException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void clearInMemoryCaches() throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("clearInMemoryCaches", true);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    clearInMemoryCaches();
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("clearInMemoryCaches",com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade.class);
            if (so == null) {
                clearInMemoryCaches();
                return;
            }
            try {
                ((com.wsbook.casestudy.ejb.TimeSheetActionProcessorFacade)so.servant).clearInMemoryCaches();
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
}
